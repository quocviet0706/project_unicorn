{"ast":null,"code":"var _jsxFileName = \"E:\\\\project_unicorn.git\\\\src\\\\components\\\\Burn\\\\index.js\";\nimport React from \"react\";\nimport cn from \"classnames\";\nimport styles from \"./Burn.module.sass\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Burn = _ref => {\n  let {\n    className\n  } = _ref;\n\n  const cancel = () => {\n    document.querySelector(\"body\").style = \"\";\n    document.querySelector(\"#modal\").style.display = \"none\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cn(className, styles.transfer),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: cn(\"h4\", styles.title),\n      children: \"Burn token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.text,\n      children: \"Are you sure to burn this token? This action cannot be undone. Token will be transfered to zero address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.btns,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: cn(\"button-pink\", styles.button),\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: cn(\"button-stroke\", styles.button),\n        onClick: () => cancel(),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Burn;\nexport default Burn;\n\nvar _c;\n\n$RefreshReg$(_c, \"Burn\");","map":{"version":3,"sources":["E:/project_unicorn.git/src/components/Burn/index.js"],"names":["React","cn","styles","Burn","className","cancel","document","querySelector","style","display","transfer","title","text","btns","button"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;AAEA,MAAMC,IAAI,GAAG,QAAmB;AAAA,MAAlB;AAAEC,IAAAA;AAAF,GAAkB;;AAC9B,QAAMC,MAAM,GAAG,MAAM;AACnBC,IAAAA,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,KAA/B,GAAuC,EAAvC;AACAF,IAAAA,QAAQ,CAACC,aAAT,CAAuB,QAAvB,EAAiCC,KAAjC,CAAuCC,OAAvC,GAAiD,MAAjD;AACD,GAHD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAER,EAAE,CAACG,SAAD,EAAYF,MAAM,CAACQ,QAAnB,CAAlB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAET,EAAE,CAAC,IAAD,EAAOC,MAAM,CAACS,KAAd,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAET,MAAM,CAACU,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AAAK,MAAA,SAAS,EAAEV,MAAM,CAACW,IAAvB;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAEZ,EAAE,CAAC,aAAD,EAAgBC,MAAM,CAACY,MAAvB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAEb,EAAE,CAAC,eAAD,EAAkBC,MAAM,CAACY,MAAzB,CAArB;AAAuD,QAAA,OAAO,EAAE,MAAMT,MAAM,EAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAlBD;;KAAMF,I;AAoBN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\r\nimport cn from \"classnames\";\r\nimport styles from \"./Burn.module.sass\";\r\n\r\nconst Burn = ({ className }) => {\r\n  const cancel = () => {\r\n    document.querySelector(\"body\").style = \"\";\r\n    document.querySelector(\"#modal\").style.display = \"none\";\r\n  };\r\n  return (\r\n    <div className={cn(className, styles.transfer)}>\r\n      <div className={cn(\"h4\", styles.title)}>Burn token</div>\r\n      <div className={styles.text}>\r\n        Are you sure to burn this token? This action cannot be undone. Token\r\n        will be transfered to zero address\r\n      </div>\r\n      <div className={styles.btns}>\r\n        <button className={cn(\"button-pink\", styles.button)}>Continue</button>\r\n        <button className={cn(\"button-stroke\", styles.button)} onClick={() => cancel()}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Burn;\r\n"]},"metadata":{},"sourceType":"module"}